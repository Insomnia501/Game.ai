"use strict";(()=>{var e={};e.id=494,e.ids=[494],e.modules={8013:e=>{e.exports=require("mongodb")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2399:(e,t,s)=>{s.r(t),s.d(t,{originalPathname:()=>m,patchFetch:()=>f,requestAsyncStorage:()=>A,routeModule:()=>d,serverHooks:()=>x,staticGenerationAsyncStorage:()=>g});var r={};s.r(r),s.d(r,{GET:()=>c,OPTIONS:()=>p});var o=s(9303),n=s(8716),a=s(670),i=s(7070),u=s(2021),l=s(5029);async function c(e){try{let t=e.nextUrl.searchParams.get("address");if(!t)return console.warn("[Subscription Status API] 缺少必需参数: address"),i.NextResponse.json({error:"Missing required parameter: address"},{status:400});if(!(0,l.At)(t))return console.warn("[Subscription Status API] 无效的钱包地址:",t),i.NextResponse.json({error:"Invalid wallet address format"},{status:400});let s=(0,l.f0)(t);console.log("[Subscription Status API] 查询订阅状态，用户地址:",s);let r=await (0,u.uD)(),o=await r.collection("subscriptions").findOne({userAddress:s});if(!o)return console.log("[Subscription Status API] 未找到订阅记录"),i.NextResponse.json({isActive:!1,expiresAt:null,daysRemaining:0,transactionHash:null,startedAt:null},{status:200});let n=Math.floor(Date.now()/1e3),a="active"===o.status&&o.expiresAt>n,c=a?Math.ceil((o.expiresAt-n)/86400):0;return console.log("[Subscription Status API] 订阅状态:",a?"有效":"已过期","剩余天数:",c),i.NextResponse.json({isActive:a,expiresAt:o.expiresAt,daysRemaining:c,transactionHash:o.transactionHash,startedAt:o.startedAt},{status:200})}catch(e){return console.error("[Subscription Status API] 处理请求失败:",e),i.NextResponse.json({error:"Failed to query subscription status",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function p(){return new i.NextResponse(null,{status:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, OPTIONS","Access-Control-Allow-Headers":"Content-Type"}})}let d=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/subscription/status/route",pathname:"/api/subscription/status",filename:"route",bundlePath:"app/api/subscription/status/route"},resolvedPagePath:"/Users/daniel/Code/10_project/Game/server/app/api/subscription/status/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:A,staticGenerationAsyncStorage:g,serverHooks:x}=d,m="/api/subscription/status/route";function f(){return(0,a.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:g})}},5029:(e,t,s)=>{function r(e){return/^0x[a-fA-F0-9]{40}$/.test(e)}function o(e){if(!r(e))throw Error("Invalid address format");return e.toLowerCase()}s.d(t,{At:()=>r,f0:()=>o})},2021:(e,t,s)=>{s.d(t,{uD:()=>u});var r=s(8013);let o=process.env.MONGODB_URI||"mongodb://localhost:27017",n=process.env.MONGODB_DB_NAME||"game-ai",a=null,i=null;async function u(){if(a&&i)return console.log("[MongoDB] 使用缓存连接"),i;try{console.log("[MongoDB] 正在连接...");let e=new r.MongoClient(o,{maxPoolSize:10,minPoolSize:2,maxIdleTimeMS:6e4});await e.connect(),console.log("[MongoDB] 连接成功");let t=e.db(n);return a=e,i=t,t}catch(e){throw console.error("[MongoDB] 连接失败:",e),e}}}};var t=require("../../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[789],()=>s(2399));module.exports=r})();