"use strict";(()=>{var e={};e.id=246,e.ids=[246],e.modules={8013:e=>{e.exports=require("mongodb")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8893:e=>{e.exports=require("buffer")},1764:e=>{e.exports=require("util")},3284:(e,o,t)=>{t.r(o),t.d(o,{originalPathname:()=>m,patchFetch:()=>P,requestAsyncStorage:()=>w,routeModule:()=>v,serverHooks:()=>f,staticGenerationAsyncStorage:()=>A});var n={};t.r(n),t.d(n,{OPTIONS:()=>h,POST:()=>g});var r=t(9303),i=t(8716),a=t(670),s=t(7070),c=t(2021),l=t(5029),d=t(9544),u=t(7856);async function p(e,o,t){try{if(console.log("[Subscription Activate API] 验证交易..."),console.log("[Subscription Activate API] 交易哈希:",e),console.log("[Subscription Activate API] 用户地址:",o),console.log("[Subscription Activate API] 金额:",t),!/^0x[a-fA-F0-9]{64}$/.test(e))return console.warn("[Subscription Activate API] 交易哈希格式无效"),{valid:!1,error:"Invalid transaction hash format"};let n=process.env.BASE_SEPOLIA_RPC_URL||process.env.BASE_RPC_URL;if(!n)return console.warn("[Subscription Activate API] RPC URL 未配置，跳过链上验证"),{valid:!0};try{let o=new u.r(n);console.log("[Subscription Activate API] 正在从 RPC 查询交易收据...");let t=await o.getTransactionReceipt(e);if(!t)return console.warn("[Subscription Activate API] 交易尚未确认（收据不存在）"),{valid:!1,error:"Transaction not yet confirmed"};if(console.log("[Subscription Activate API] 交易收据已获取，状态:",t.status),0===t.status)return console.warn("[Subscription Activate API] 交易失败"),{valid:!1,error:"Transaction failed on chain"};return console.log("[Subscription Activate API] 交易已验证，区块号:",t.blockNumber),{valid:!0}}catch(e){return console.warn("[Subscription Activate API] RPC 查询失败:",e.message),console.warn("[Subscription Activate API] 错误堆栈:",e.stack),{valid:!1,error:"Failed to verify transaction on chain"}}}catch(e){return console.error("[Subscription Activate API] 交易验证异常:",e),{valid:!1,error:"Transaction verification error"}}}async function g(e){try{let{userAddress:o,transactionHash:t,amount:n}=await e.json();if(!o||!t||!n)return console.warn("[Subscription Activate API] 缺少必需参数"),s.NextResponse.json({success:!1,error:"Missing required parameters: userAddress, transactionHash, amount"},{status:400});if(console.log("[Subscription Activate API] 激活订阅请求，用户地址:",o),!(0,l.At)(o))return console.warn("[Subscription Activate API] 无效的钱包地址:",o),s.NextResponse.json({success:!1,error:"Invalid user address format"},{status:400});let r=(0,l.f0)(o);if("10"!==String(n))return console.warn("[Subscription Activate API] 无效的金额:",n,"期望:","10"),s.NextResponse.json({success:!1,error:`Invalid amount. Expected 10 $VIRTUAL, got ${n}`},{status:400});let i=await p(t,r,n);if(!i.valid)return console.warn("[Subscription Activate API] 交易验证失败:",i.error),s.NextResponse.json({success:!1,error:"Transaction verification failed",details:i.error},{status:400});let a=await (0,c.uD)(),u=Math.floor(Date.now()/1e3),g=u+2592e3,h=await a.collection("subscriptions").findOne({userAddress:r}),v=!1;h?(console.log("[Subscription Activate API] 续期现有订阅"),await a.collection("subscriptions").updateOne({userAddress:r},{$set:{status:"active",expiresAt:g,renewedAt:u,transactionHash:t,updatedAt:new Date}}),v=!0):(console.log("[Subscription Activate API] 创建新订阅"),await a.collection("subscriptions").insertOne({userAddress:r,status:"active",expiresAt:g,startedAt:u,renewedAt:u,transactionHash:t,createdAt:new Date,updatedAt:new Date})),console.log("[Subscription Activate API] 订阅",v?"续期":"激活","成功，到期时间:",new Date(1e3*g));let w=null;try{let e=process.env.GAME_DIVIDEND_POOL_ADDRESS,o=(0,d.r0)("7");if(e){console.log("[Subscription Activate API] 准备更新分红池...");let t=(0,d.G4)();w=(await t.updateGameDividendPool(e,o)).transactionHash,console.log("[Subscription Activate API] 分红已更新，TX Hash:",w),await a.collection("subscriptions").updateOne({userAddress:r},{$set:{dividendUpdateTxHash:w,updatedAt:new Date}})}else console.warn("[Subscription Activate API] GAME_DIVIDEND_POOL_ADDRESS 未配置，跳过分红更新")}catch(e){console.error("[Subscription Activate API] 分红更新失败:",e)}return s.NextResponse.json({success:!0,expiresAt:g,dividendUpdateTxHash:w,message:v?"订阅已续期，有效期30天":"订阅已激活，有效期30天"},{status:200})}catch(e){return console.error("[Subscription Activate API] 处理请求失败:",e),s.NextResponse.json({success:!1,error:"Failed to activate subscription",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function h(){return new s.NextResponse(null,{status:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization"}})}let v=new r.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/subscription/activate/route",pathname:"/api/subscription/activate",filename:"route",bundlePath:"app/api/subscription/activate/route"},resolvedPagePath:"/Users/daniel/Code/10_project/Game/server/app/api/subscription/activate/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:w,staticGenerationAsyncStorage:A,serverHooks:f}=v,m="/api/subscription/activate/route";function P(){return(0,a.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:A})}},5029:(e,o,t)=>{function n(e){return/^0x[a-fA-F0-9]{40}$/.test(e)}function r(e){if(!n(e))throw Error("Invalid address format");return e.toLowerCase()}t.d(o,{At:()=>n,f0:()=>r})},9544:(e,o,t)=>{t.d(o,{G4:()=>g,mb:()=>v,r0:()=>h});var n=t(7856),r=t(8165),i=t(6772),a=t(7618),s=t(2458),c=t(6103),l=t(5392);let d=["function transfer(address to, uint256 amount) public returns (bool)","function balanceOf(address account) public view returns (uint256)","function approve(address spender, uint256 amount) public returns (bool)","function allowance(address owner, address spender) public view returns (uint256)"],u=["function depositDividend(uint256 amount) external","function claimDividend() external nonReentrant returns (uint256 claimable)","function getPendingDividend(address user) external view returns (uint256)","function getUserDividendInfo(address user) external view returns (uint256 pending, uint256 claimed, uint256 gameBalance)","function getPoolStats() external view returns (uint256 _totalDividendPool, uint256 _totalClaimed, uint256 _totalPending, uint256 _totalDividendPerShare)"];class p{provider;signer;rpcUrl;privateKey;constructor(e){this.rpcUrl=e.rpcUrl,this.privateKey=e.privateKey,this.provider=new n.r(e.rpcUrl),this.signer=new r.w5(e.privateKey,this.provider)}async callJsonRpc(e,o){let t=await fetch(this.rpcUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({jsonrpc:"2.0",id:Date.now(),method:e,params:o})}),n=await t.json();if(n.error)throw Error(`JSON-RPC Error: ${n.error.message}`);return n.result}async transferERC20(e,o,t){try{let n,l;if(console.log("[Blockchain] 准备转账 ERC20 代币"),console.log("[Blockchain] 代币地址:",e),console.log("[Blockchain] 接收地址:",o),console.log("[Blockchain] 转账数量:",t),!i.UJ(e))throw Error("Invalid token address format");if(!i.UJ(o))throw Error("Invalid recipient address format");console.log("[Blockchain] 使用 JSON-RPC 构建转账交易...");let u=new r.w5(this.privateKey);console.log("[Blockchain] 通过原始 JSON-RPC 获取交易数据...");try{let e=await this.callJsonRpc("eth_getTransactionCount",[u.address,"latest"]);n=parseInt(e,16),console.log("[Blockchain] 获取 Nonce:",n)}catch(e){console.warn("[Blockchain] 无法获取 Nonce，使用默认值 0"),n=0}try{let e=await this.callJsonRpc("eth_gasPrice",[]);l=a.O$.from(e),console.log("[Blockchain] 获取 Gas Price:",s.bM(l,"gwei"),"gwei")}catch(e){console.warn("[Blockchain] 无法获取 Gas Price，使用默认值 1 gwei"),l=s.vz("1","gwei")}let p=a.O$.from("100000");console.log("[Blockchain] 交易参数:"),console.log("  • Nonce:",n),console.log("  • Gas Price:",s.bM(l,"gwei"),"gwei"),console.log("  • Gas Limit:",p.toString());let g=new c.vU(d).encodeFunctionData("transfer",[o,t]),h={to:e,from:u.address,nonce:n,gasLimit:p,gasPrice:l,data:g};console.log("[Blockchain] 签名交易...");let v=await u.signTransaction(h);console.log("[Blockchain] 发送签名的交易到网络...");let w=await this.callJsonRpc("eth_sendRawTransaction",[v]);console.log("[Blockchain] 交易已发送，Hash:",w),console.log("[Blockchain] 等待交易确认...");let A=null;for(let e=0;e<30;e++){try{let e=await this.callJsonRpc("eth_getTransactionReceipt",[w]);if(e){A=e,console.log("[Blockchain] 交易已确认，区块号:",parseInt(e.blockNumber,16));break}}catch(o){console.warn("[Blockchain] 等待确认中...",e+1)}await new Promise(e=>setTimeout(e,2e3))}return{transactionHash:w,blockNumber:A?parseInt(A.blockNumber,16):void 0}}catch(e){throw console.error("[Blockchain] 转账失败:",e.message),e}}async getERC20Balance(e,o){try{let t=new l.CH(e,d,this.provider);return(await t.balanceOf(o)).toString()}catch(e){throw console.error("[Blockchain] 查询余额失败:",e),e}}async getSignerAddress(){return await this.signer.getAddress()}async getNetworkInfo(){let e=await this.provider.getNetwork();return{chainId:e.chainId,name:e.name}}async updateGameDividendPool(e,o){try{let t,n;if(console.log("[Blockchain] 准备调用 GameDividendPool.depositDividend()"),console.log("[Blockchain] 分红池地址:",e),console.log("[Blockchain] 分红金额:",o),!i.UJ(e))throw Error("Invalid dividend pool address format");let l=new r.w5(this.privateKey);try{let e=await this.callJsonRpc("eth_getTransactionCount",[l.address,"latest"]);t=parseInt(e,16),console.log("[Blockchain] 获取 Nonce:",t)}catch(e){console.warn("[Blockchain] 无法获取 Nonce，使用默认值 0"),t=0}try{let e=await this.callJsonRpc("eth_gasPrice",[]);n=a.O$.from(e),console.log("[Blockchain] 获取 Gas Price:",s.bM(n,"gwei"),"gwei")}catch(e){console.warn("[Blockchain] 无法获取 Gas Price，使用默认值 1 gwei"),n=s.vz("1","gwei")}let p=a.O$.from("150000");console.log("[Blockchain] 交易参数:"),console.log("  • Nonce:",t),console.log("  • Gas Price:",s.bM(n,"gwei"),"gwei"),console.log("  • Gas Limit:",p.toString()),console.log("[Blockchain] 构建 approve 交易...");let g=process.env.VIRTUAL_TOKEN_ADDRESS;if(!g)throw Error("VIRTUAL_TOKEN_ADDRESS environment variable is not set");let h=new c.vU(d).encodeFunctionData("approve",[e,o]),v={to:g,from:l.address,nonce:t,gasLimit:a.O$.from("100000"),gasPrice:n,data:h};console.log("[Blockchain] 签名 approve 交易...");let w=await l.signTransaction(v);console.log("[Blockchain] 发送 approve 交易...");let A=await this.callJsonRpc("eth_sendRawTransaction",[w]);console.log("[Blockchain] Approve 交易已发送，Hash:",A),console.log("[Blockchain] 等待 approve 交易确认...");for(let e=0;e<30;e++){try{if(await this.callJsonRpc("eth_getTransactionReceipt",[A])){console.log("[Blockchain] Approve 交易已确认");break}}catch(o){console.warn("[Blockchain] 等待 approve 确认中...",e+1)}await new Promise(e=>setTimeout(e,2e3))}console.log("[Blockchain] 构建 depositDividend 交易...");let f=new c.vU(u).encodeFunctionData("depositDividend",[o]),m={to:e,from:l.address,nonce:t+1,gasLimit:a.O$.from("150000"),gasPrice:n,data:f};console.log("[Blockchain] 签名 depositDividend 交易...");let P=await l.signTransaction(m);console.log("[Blockchain] 发送 depositDividend 交易...");let b=await this.callJsonRpc("eth_sendRawTransaction",[P]);console.log("[Blockchain] Deposit 交易已发送，Hash:",b),console.log("[Blockchain] 等待 depositDividend 交易确认...");let S=null;for(let e=0;e<30;e++){try{let e=await this.callJsonRpc("eth_getTransactionReceipt",[b]);if(e){S=e,console.log("[Blockchain] Deposit 交易已确认，区块号:",parseInt(e.blockNumber,16));break}}catch(o){console.warn("[Blockchain] 等待 deposit 确认中...",e+1)}await new Promise(e=>setTimeout(e,2e3))}return{transactionHash:b,blockNumber:S?parseInt(S.blockNumber,16):void 0}}catch(e){throw console.error("[Blockchain] 分红更新失败:",e.message),e}}async getUserDividendInfo(e,o){try{if(console.log("[Blockchain] 查询用户分红信息"),console.log("[Blockchain] 分红池地址:",e),console.log("[Blockchain] 用户地址:",o),!i.UJ(e))throw Error("Invalid dividend pool address format");if(!i.UJ(o))throw Error("Invalid user address format");let t=new l.CH(e,u,this.provider),n=await t.getUserDividendInfo(o);return console.log("[Blockchain] 用户分红信息查询成功"),console.log("[Blockchain] 待提取分红:",n.pending.toString()),console.log("[Blockchain] 已提取分红:",n.claimed.toString()),console.log("[Blockchain] GAME 余额:",n.gameBalance.toString()),{pending:n.pending.toString(),claimed:n.claimed.toString(),gameBalance:n.gameBalance.toString()}}catch(e){throw console.error("[Blockchain] 查询分红信息失败:",e.message),e}}async getDividendPoolStats(e){try{if(console.log("[Blockchain] 查询分红池统计信息"),!i.UJ(e))throw Error("Invalid dividend pool address format");let o=new l.CH(e,u,this.provider),t=await o.getPoolStats();return console.log("[Blockchain] 分红池统计信息查询成功"),{totalDividendPool:t._totalDividendPool.toString(),totalClaimed:t._totalClaimed.toString(),totalPending:t._totalPending.toString(),totalDividendPerShare:t._totalDividendPerShare.toString()}}catch(e){throw console.error("[Blockchain] 查询分红池统计失败:",e.message),e}}}function g(){let e=process.env.BASE_SEPOLIA_RPC_URL,o=process.env.DEPLOYER_PRIVATE_KEY,t=parseInt(process.env.CHAIN_ID||"84532");if(!e)throw Error("BASE_SEPOLIA_RPC_URL environment variable is not set");if(!o)throw Error("DEPLOYER_PRIVATE_KEY environment variable is not set");return new p({rpcUrl:e,privateKey:o,chainId:t})}function h(e,o=18){return s.vz(e,o).toString()}function v(e,o=18){return s.bM(e,o)}},2021:(e,o,t)=>{t.d(o,{uD:()=>c});var n=t(8013);let r=process.env.MONGODB_URI||"mongodb://localhost:27017",i=process.env.MONGODB_DB_NAME||"game-ai",a=null,s=null;async function c(){if(a&&s)return console.log("[MongoDB] 使用缓存连接"),s;try{console.log("[MongoDB] 正在连接...");let e=new n.MongoClient(r,{maxPoolSize:10,minPoolSize:2,maxIdleTimeMS:6e4});await e.connect(),console.log("[MongoDB] 连接成功");let o=e.db(i);return a=e,s=o,o}catch(e){throw console.error("[MongoDB] 连接失败:",e),e}}}};var o=require("../../../../webpack-runtime.js");o.C(e);var t=e=>o(o.s=e),n=o.X(0,[789,878],()=>t(3284));module.exports=n})();