"use strict";(()=>{var e={};e.id=407,e.ids=[407],e.modules={8013:e=>{e.exports=require("mongodb")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8893:e=>{e.exports=require("buffer")},4770:e=>{e.exports=require("crypto")},1764:e=>{e.exports=require("util")},1561:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>I,patchFetch:()=>f,requestAsyncStorage:()=>g,routeModule:()=>m,serverHooks:()=>x,staticGenerationAsyncStorage:()=>P});var s={};r.r(s),r.d(s,{OPTIONS:()=>D,POST:()=>v});var n=r(9303),i=r(8716),o=r(670),a=r(7070),d=r(2021),u=r(5029),c=r(9544),l=r(6103),p=r(9576);let w=["function claimDividend() external nonReentrant returns (uint256 claimable)"];async function v(e){try{let{userAddress:t,transactionHash:r,amount:s}=await e.json();if(!t)return console.warn("[Dividend Withdraw API] 缺少必需参数: userAddress"),a.NextResponse.json({success:!1,error:"Missing required parameter: userAddress"},{status:400});if(!(0,u.At)(t))return console.warn("[Dividend Withdraw API] 无效的钱包地址:",t),a.NextResponse.json({success:!1,error:"Invalid user address format"},{status:400});let n=(0,u.f0)(t);console.log("[Dividend Withdraw API] 分红提现请求，用户地址:",n);let i=process.env.GAME_DIVIDEND_POOL_ADDRESS;if(!i)return console.error("[Dividend Withdraw API] GAME_DIVIDEND_POOL_ADDRESS 未配置"),a.NextResponse.json({success:!1,error:"Dividend pool address not configured"},{status:500});if(r)return A(n,r,s);return h(n,i)}catch(e){return console.error("[Dividend Withdraw API] 处理请求失败:",e),a.NextResponse.json({success:!1,error:"Failed to process dividend withdrawal",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function h(e,t){try{console.log("[Dividend Withdraw API] 生成提现签名数据");let r=(0,c.G4)(),s=(await r.getUserDividendInfo(t,e)).pending;if("0"===s)return console.warn("[Dividend Withdraw API] 用户没有可提现的分红"),a.NextResponse.json({success:!1,error:"No dividends available to withdraw"},{status:400});let n=new l.vU(w).encodeFunctionData("claimDividend()",[]);return console.log("[Dividend Withdraw API] 签名数据生成完成"),console.log("[Dividend Withdraw API] 可提现金额:",(0,c.mb)(s,18),"VIRTUAL"),a.NextResponse.json({success:!0,userAddress:e,availableAmount:(0,c.mb)(s,18),transactionData:{to:t,from:e,data:n,value:"0"},instructions:{step1:"使用您的钱包（如 MetaMask）连接到 Base 网络",step2:'使用钱包的 "签名和发送交易" 功能',step3:"复制上面的交易数据到钱包",step4:"签名并发送交易",step5:"交易确认后，您的分红将自动转入您的钱包"},note:"此接口仅生成交易数据，实际交易由您的钱包执行。请确保您了解交易内容再签名。",message:"请使用钱包签名并发送此交易"},{status:200})}catch(e){throw console.error("[Dividend Withdraw API] 生成签名数据失败:",e.message),e}}async function A(e,t,r){try{if(console.log("[Dividend Withdraw API] 记录提现结果"),console.log("[Dividend Withdraw API] 交易哈希:",t),!/^0x[a-fA-F0-9]{64}$/.test(t))return console.warn("[Dividend Withdraw API] 交易哈希格式无效"),a.NextResponse.json({success:!1,error:"Invalid transaction hash format"},{status:400});let s=await (0,d.uD)(),n={withdrawalId:(0,p.Z)(),userAddress:e,transactionHash:t,claimedAmount:r||"unknown",status:"pending",createdAt:new Date,updatedAt:new Date};return await s.collection("dividendWithdrawals").insertOne(n),console.log("[Dividend Withdraw API] 提现记录已保存"),a.NextResponse.json({success:!0,userAddress:e,transactionHash:t,claimedAmount:r||"unknown",status:"pending",message:"分红提现记录已保存，请在区块浏览器上查看交易状态",explorerUrl:`https://sepolia.basescan.org/tx/${t}`},{status:200})}catch(e){throw console.error("[Dividend Withdraw API] 记录提现失败:",e.message),e}}async function D(){return new a.NextResponse(null,{status:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization"}})}let m=new n.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/dividend/withdraw/route",pathname:"/api/dividend/withdraw",filename:"route",bundlePath:"app/api/dividend/withdraw/route"},resolvedPagePath:"/Users/daniel/Code/10_project/Game/server/app/api/dividend/withdraw/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:g,staticGenerationAsyncStorage:P,serverHooks:x}=m,I="/api/dividend/withdraw/route";function f(){return(0,o.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:P})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[789,878,885],()=>r(1561));module.exports=s})();