"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/inference/chat/route";
exports.ids = ["app/api/inference/chat/route"];
exports.modules = {

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("mongodb");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("assert");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Finference%2Fchat%2Froute&page=%2Fapi%2Finference%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Finference%2Fchat%2Froute.ts&appDir=%2FUsers%2Fdaniel%2FCode%2F10_project%2FGame%2Fserver%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdaniel%2FCode%2F10_project%2FGame%2Fserver&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Finference%2Fchat%2Froute&page=%2Fapi%2Finference%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Finference%2Fchat%2Froute.ts&appDir=%2FUsers%2Fdaniel%2FCode%2F10_project%2FGame%2Fserver%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdaniel%2FCode%2F10_project%2FGame%2Fserver&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_daniel_Code_10_project_Game_server_app_api_inference_chat_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/inference/chat/route.ts */ \"(rsc)/./app/api/inference/chat/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/inference/chat/route\",\n        pathname: \"/api/inference/chat\",\n        filename: \"route\",\n        bundlePath: \"app/api/inference/chat/route\"\n    },\n    resolvedPagePath: \"/Users/daniel/Code/10_project/Game/server/app/api/inference/chat/route.ts\",\n    nextConfigOutput,\n    userland: _Users_daniel_Code_10_project_Game_server_app_api_inference_chat_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/inference/chat/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZpbmZlcmVuY2UlMkZjaGF0JTJGcm91dGUmcGFnZT0lMkZhcGklMkZpbmZlcmVuY2UlMkZjaGF0JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGaW5mZXJlbmNlJTJGY2hhdCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmRhbmllbCUyRkNvZGUlMkYxMF9wcm9qZWN0JTJGR2FtZSUyRnNlcnZlciUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZkYW5pZWwlMkZDb2RlJTJGMTBfcHJvamVjdCUyRkdhbWUlMkZzZXJ2ZXImaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ3lCO0FBQ3RHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGdhbWUtYWkvc2VydmVyLz9iZDZiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9kYW5pZWwvQ29kZS8xMF9wcm9qZWN0L0dhbWUvc2VydmVyL2FwcC9hcGkvaW5mZXJlbmNlL2NoYXQvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2luZmVyZW5jZS9jaGF0L3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvaW5mZXJlbmNlL2NoYXRcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2luZmVyZW5jZS9jaGF0L3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL2RhbmllbC9Db2RlLzEwX3Byb2plY3QvR2FtZS9zZXJ2ZXIvYXBwL2FwaS9pbmZlcmVuY2UvY2hhdC9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvaW5mZXJlbmNlL2NoYXQvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Finference%2Fchat%2Froute&page=%2Fapi%2Finference%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Finference%2Fchat%2Froute.ts&appDir=%2FUsers%2Fdaniel%2FCode%2F10_project%2FGame%2Fserver%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdaniel%2FCode%2F10_project%2FGame%2Fserver&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/inference/chat/route.ts":
/*!*****************************************!*\
  !*** ./app/api/inference/chat/route.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OPTIONS: () => (/* binding */ OPTIONS),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/mongodb */ \"(rsc)/./lib/mongodb.ts\");\n/* harmony import */ var _lib_dify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/dify */ \"(rsc)/./lib/dify.ts\");\n/* harmony import */ var _lib_address_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/address-utils */ \"(rsc)/./lib/address-utils.ts\");\n/**\n * AI 健康咨询 API 路由\n *\n * 功能：\n * 1. 检查用户订阅状态\n * 2. 调用 Dify API 获取 AI 回答\n * 3. 返回回答结果\n *\n * 请求方式: POST /api/inference/chat\n *\n * 请求体格式:\n * {\n *   \"userAddress\": \"0x...\",\n *   \"question\": \"我每天睡6小时够吗？\",\n *   \"conversationId\": \"uuid\" // 可选，用于多轮对话\n * }\n *\n * 响应格式:\n * {\n *   \"answer\": \"根据健康研究...\",\n *   \"conversationId\": \"uuid\",\n *   \"subscriptionStatus\": {\n *     \"isActive\": true,\n *     \"daysRemaining\": 15\n *   }\n * }\n */ \n\n\n\n/**\n * 验证用户订阅状态\n * 检查数据库中的订阅记录是否有效\n */ async function checkSubscription(userAddress) {\n    try {\n        const db = await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_1__.connectDB)();\n        const subscription = await db.collection(\"subscriptions\").findOne({\n            userAddress,\n            status: \"active\"\n        });\n        if (!subscription) {\n            return {\n                isActive: false,\n                error: \"No active subscription found\"\n            };\n        }\n        const now = Math.floor(Date.now() / 1000) // 转换为秒级 Unix 时间戳\n        ;\n        const isExpired = subscription.expiresAt < now;\n        if (isExpired) {\n            return {\n                isActive: false,\n                error: \"Subscription has expired\"\n            };\n        }\n        const daysRemaining = Math.ceil((subscription.expiresAt - now) / (24 * 3600));\n        return {\n            isActive: true,\n            expiresAt: subscription.expiresAt,\n            daysRemaining,\n            transactionHash: subscription.transactionHash,\n            startedAt: subscription.startedAt\n        };\n    } catch (error) {\n        console.error(\"[Chat API] 订阅状态检查失败:\", error);\n        return {\n            isActive: false,\n            error: \"Failed to check subscription status\"\n        };\n    }\n}\n/**\n * 处理 POST 请求\n */ async function POST(request) {\n    try {\n        const body = await request.json();\n        const { userAddress, question, conversationId } = body;\n        // 参数验证\n        if (!userAddress || !question) {\n            console.warn(\"[Chat API] 缺少必需参数: userAddress 或 question\");\n            return corsJson({\n                error: \"Missing required parameters: userAddress and question\"\n            }, {\n                status: 400\n            });\n        }\n        // 验证地址格式\n        if (!(0,_lib_address_utils__WEBPACK_IMPORTED_MODULE_3__.isValidAddress)(userAddress)) {\n            console.warn(\"[Chat API] 无效的钱包地址:\", userAddress);\n            return corsJson({\n                error: \"Invalid wallet address format\"\n            }, {\n                status: 400\n            });\n        }\n        const normalizedAddress = (0,_lib_address_utils__WEBPACK_IMPORTED_MODULE_3__.normalizeAddress)(userAddress);\n        // 验证问题长度\n        if (typeof question !== \"string\" || question.trim().length === 0) {\n            console.warn(\"[Chat API] 问题内容无效\");\n            return corsJson({\n                error: \"Question must be a non-empty string\"\n            }, {\n                status: 400\n            });\n        }\n        if (question.length > 2000) {\n            console.warn(\"[Chat API] 问题内容过长\");\n            return corsJson({\n                error: \"Question must be less than 2000 characters\"\n            }, {\n                status: 400\n            });\n        }\n        console.log(\"[Chat API] 收到请求 | 用户:\", normalizedAddress, \"| 问题长度:\", question.length);\n        if (conversationId) {\n            console.log(\"[Chat API] 对话ID:\", conversationId);\n        }\n        // 1. 检查订阅状态\n        console.log(\"[Chat API] 检查订阅状态...\");\n        const subscriptionStatus = await checkSubscription(normalizedAddress);\n        if (!subscriptionStatus.isActive) {\n            console.warn(\"[Chat API] 订阅验证失败:\", subscriptionStatus.error);\n            return corsJson({\n                error: subscriptionStatus.error,\n                code: \"SUBSCRIPTION_INACTIVE\"\n            }, {\n                status: 403\n            });\n        }\n        console.log(\"[Chat API] 订阅有效 | 剩余天数:\", subscriptionStatus.daysRemaining);\n        // 2. 初始化 Dify 客户端\n        const apiKey = process.env.DIFY_API_KEY;\n        if (!apiKey) {\n            console.error(\"[Chat API] DIFY_API_KEY 环境变量未配置\");\n            return corsJson({\n                error: \"AI service is not properly configured\",\n                code: \"CONFIG_ERROR\"\n            }, {\n                status: 500\n            });\n        }\n        const difyClient = (0,_lib_dify__WEBPACK_IMPORTED_MODULE_2__.createDifyClient)(apiKey);\n        // 3. 调用 Dify API\n        console.log(\"[Chat API] 调用 Dify API...\");\n        let difyResponse;\n        try {\n            difyResponse = await difyClient.sendMessage(question, normalizedAddress, conversationId);\n        } catch (difyError) {\n            console.error(\"[Chat API] Dify API 调用失败:\", difyError.message);\n            // 处理特定的 Dify 错误\n            if (difyError.response?.status === 401) {\n                return corsJson({\n                    error: \"AI service authentication failed\",\n                    code: \"DIFY_AUTH_FAILED\"\n                }, {\n                    status: 401\n                });\n            }\n            if (difyError.response?.status === 429) {\n                return corsJson({\n                    error: \"AI service rate limit exceeded, please try again later\",\n                    code: \"DIFY_RATE_LIMITED\"\n                }, {\n                    status: 429\n                });\n            }\n            throw difyError;\n        }\n        console.log(\"[Chat API] Dify 响应成功\");\n        // 4. 保存对话记录到 MongoDB（可选但推荐）\n        try {\n            const db = await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_1__.connectDB)();\n            await db.collection(\"chat_logs\").insertOne({\n                userAddress: normalizedAddress,\n                question,\n                answer: difyResponse.answer,\n                conversationId: difyResponse.conversation_id,\n                messageId: difyResponse.message_id,\n                taskId: difyResponse.task_id,\n                timestamp: new Date(),\n                metadata: difyResponse.metadata\n            });\n            console.log(\"[Chat API] 对话记录已保存到 MongoDB\");\n        } catch (logError) {\n            console.warn(\"[Chat API] 对话记录保存失败 (非致命错误):\", logError);\n        // 不中断请求，只记录警告\n        }\n        // 5. 返回响应\n        return corsJson({\n            answer: difyResponse.answer,\n            conversationId: difyResponse.conversation_id,\n            messageId: difyResponse.message_id,\n            taskId: difyResponse.task_id,\n            subscriptionStatus: {\n                isActive: subscriptionStatus.isActive,\n                daysRemaining: subscriptionStatus.daysRemaining\n            }\n        }, {\n            status: 200\n        });\n    } catch (error) {\n        console.error(\"[Chat API] 处理请求失败:\", error);\n        // 处理网络/超时错误\n        if (error instanceof Error) {\n            if (error.message.includes(\"ECONNREFUSED\") || error.message.includes(\"ENOTFOUND\")) {\n                return corsJson({\n                    error: \"Failed to connect to AI service\",\n                    code: \"SERVICE_UNAVAILABLE\"\n                }, {\n                    status: 503\n                });\n            }\n            if (error.message.includes(\"timeout\") || error.message.includes(\"ETIMEDOUT\")) {\n                return corsJson({\n                    error: \"Request to AI service timed out, please try again\",\n                    code: \"REQUEST_TIMEOUT\"\n                }, {\n                    status: 504\n                });\n            }\n        }\n        return corsJson({\n            error: \"Failed to process chat request\",\n            code: \"INTERNAL_ERROR\",\n            details: error instanceof Error ? error.message : \"Unknown error\"\n        }, {\n            status: 500\n        });\n    }\n}\n/**\n * 处理 OPTIONS 请求（用于 CORS 预检）\n */ async function OPTIONS() {\n    return corsJson(null, {\n        status: 200\n    });\n}\nfunction corsJson(body, init) {\n    const response = body === null ? new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(null, init) : next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(body, init);\n    response.headers.set(\"Access-Control-Allow-Origin\", \"*\");\n    response.headers.set(\"Access-Control-Allow-Methods\", \"POST, OPTIONS\");\n    response.headers.set(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\n    response.headers.set(\"Access-Control-Allow-Credentials\", \"true\");\n    return response;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/inference/chat/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/address-utils.ts":
/*!******************************!*\
  !*** ./lib/address-utils.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isValidAddress: () => (/* binding */ isValidAddress),\n/* harmony export */   isValidTransactionHash: () => (/* binding */ isValidTransactionHash),\n/* harmony export */   normalizeAddress: () => (/* binding */ normalizeAddress)\n/* harmony export */ });\n/**\n * 地址验证和规范化工具\n * 独立于 ethers，避免 Next.js 兼容性问题\n */ /**\n * 验证是否为有效的以太坊地址\n * @param address 地址字符串\n * @returns 是否有效\n */ function isValidAddress(address) {\n    return /^0x[a-fA-F0-9]{40}$/.test(address);\n}\n/**\n * 规范化地址为小写格式\n * @param address 地址字符串\n * @returns 规范化后的地址\n */ function normalizeAddress(address) {\n    if (!isValidAddress(address)) {\n        throw new Error(\"Invalid address format\");\n    }\n    return address.toLowerCase();\n}\n/**\n * 验证交易哈希格式\n * @param hash 交易哈希\n * @returns 是否有效\n */ function isValidTransactionHash(hash) {\n    return /^0x[a-fA-F0-9]{64}$/.test(hash);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvYWRkcmVzcy11dGlscy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7O0NBR0MsR0FFRDs7OztDQUlDLEdBQ00sU0FBU0EsZUFBZUMsT0FBZTtJQUM1QyxPQUFPLHNCQUFzQkMsSUFBSSxDQUFDRDtBQUNwQztBQUVBOzs7O0NBSUMsR0FDTSxTQUFTRSxpQkFBaUJGLE9BQWU7SUFDOUMsSUFBSSxDQUFDRCxlQUFlQyxVQUFVO1FBQzVCLE1BQU0sSUFBSUcsTUFBTTtJQUNsQjtJQUNBLE9BQU9ILFFBQVFJLFdBQVc7QUFDNUI7QUFFQTs7OztDQUlDLEdBQ00sU0FBU0MsdUJBQXVCQyxJQUFZO0lBQ2pELE9BQU8sc0JBQXNCTCxJQUFJLENBQUNLO0FBQ3BDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGdhbWUtYWkvc2VydmVyLy4vbGliL2FkZHJlc3MtdXRpbHMudHM/NjNmMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIOWcsOWdgOmqjOivgeWSjOinhOiMg+WMluW3peWFt1xuICog54us56uL5LqOIGV0aGVyc++8jOmBv+WFjSBOZXh0LmpzIOWFvOWuueaAp+mXrumimFxuICovXG5cbi8qKlxuICog6aqM6K+B5piv5ZCm5Li65pyJ5pWI55qE5Lul5aSq5Z2K5Zyw5Z2AXG4gKiBAcGFyYW0gYWRkcmVzcyDlnLDlnYDlrZfnrKbkuLJcbiAqIEByZXR1cm5zIOaYr+WQpuacieaViFxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNWYWxpZEFkZHJlc3MoYWRkcmVzczogc3RyaW5nKTogYm9vbGVhbiB7XG4gIHJldHVybiAvXjB4W2EtZkEtRjAtOV17NDB9JC8udGVzdChhZGRyZXNzKVxufVxuXG4vKipcbiAqIOinhOiMg+WMluWcsOWdgOS4uuWwj+WGmeagvOW8j1xuICogQHBhcmFtIGFkZHJlc3Mg5Zyw5Z2A5a2X56ym5LiyXG4gKiBAcmV0dXJucyDop4TojIPljJblkI7nmoTlnLDlnYBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZUFkZHJlc3MoYWRkcmVzczogc3RyaW5nKTogc3RyaW5nIHtcbiAgaWYgKCFpc1ZhbGlkQWRkcmVzcyhhZGRyZXNzKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBhZGRyZXNzIGZvcm1hdCcpXG4gIH1cbiAgcmV0dXJuIGFkZHJlc3MudG9Mb3dlckNhc2UoKVxufVxuXG4vKipcbiAqIOmqjOivgeS6pOaYk+WTiOW4jOagvOW8j1xuICogQHBhcmFtIGhhc2gg5Lqk5piT5ZOI5biMXG4gKiBAcmV0dXJucyDmmK/lkKbmnInmlYhcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRUcmFuc2FjdGlvbkhhc2goaGFzaDogc3RyaW5nKTogYm9vbGVhbiB7XG4gIHJldHVybiAvXjB4W2EtZkEtRjAtOV17NjR9JC8udGVzdChoYXNoKVxufVxuIl0sIm5hbWVzIjpbImlzVmFsaWRBZGRyZXNzIiwiYWRkcmVzcyIsInRlc3QiLCJub3JtYWxpemVBZGRyZXNzIiwiRXJyb3IiLCJ0b0xvd2VyQ2FzZSIsImlzVmFsaWRUcmFuc2FjdGlvbkhhc2giLCJoYXNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/address-utils.ts\n");

/***/ }),

/***/ "(rsc)/./lib/dify.ts":
/*!*********************!*\
  !*** ./lib/dify.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DifyClient: () => (/* binding */ DifyClient),\n/* harmony export */   createDifyClient: () => (/* binding */ createDifyClient)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/lib/axios.js\");\n/**\n * Dify API 集成模块\n * 用于调用 Dify 聊天对话 API\n *\n * Dify API 文档: https://docs.dify.ai/\n * 基础 URL: https://api.dify.ai/v1\n */ \n/**\n * Dify 客户端类\n */ class DifyClient {\n    client;\n    apiKey;\n    constructor(config){\n        this.apiKey = config.apiKey;\n        const baseURL = config.baseUrl || \"https://api.dify.ai/v1\";\n        const timeout = config.timeout || 30000;\n        this.client = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n            baseURL,\n            timeout,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            }\n        });\n    }\n    /**\n   * 发送聊天消息到 Dify\n   * 支持两种模式：\n   * - blocking: 阻塞模式，等待执行完毕后返回结果（推荐用于 API）\n   * - streaming: 流式模式，基于 SSE 实现流式返回\n   *\n   * @param message 用户输入/提问内容\n   * @param userId 用户标识（必需）\n   * @param conversationId 会话 ID（可选，用于多轮对话）\n   * @param inputs 应用定义的变量值（可选）\n   * @returns Dify 响应数据\n   */ async sendMessage(message, userId, conversationId, inputs) {\n        try {\n            console.log(\"[Dify] 发送消息...\");\n            console.log(\"[Dify] 用户ID:\", userId);\n            console.log(\"[Dify] 消息内容:\", message);\n            const requestData = {\n                query: message,\n                user: userId,\n                response_mode: \"blocking\",\n                inputs: inputs || {}\n            };\n            // 如果提供了 conversation_id，表示继续已有的对话\n            if (conversationId) {\n                requestData.conversation_id = conversationId;\n                console.log(\"[Dify] 使用已有对话ID:\", conversationId);\n            } else {\n                console.log(\"[Dify] 创建新对话\");\n            }\n            console.log(\"[Dify] 请求数据:\", JSON.stringify(requestData));\n            const response = await this.client.post(\"/chat-messages\", requestData, {\n                headers: {\n                    \"Authorization\": `Bearer ${this.apiKey}`\n                }\n            });\n            console.log(\"[Dify] 响应状态:\", response.status);\n            console.log(\"[Dify] 获取到AI回复:\", response.data.answer.substring(0, 100) + \"...\");\n            return response.data;\n        } catch (error) {\n            console.error(\"[Dify] API 调用失败:\", error);\n            throw error;\n        }\n    }\n    /**\n   * 获取会话历史消息\n   *\n   * @param conversationId 会话 ID\n   * @param userId 用户标识\n   * @param limit 返回的消息条数，默认 20\n   * @param firstId 当前页第一条聊天记录的 ID（用于分页）\n   * @returns 消息列表和分页信息\n   */ async getMessages(conversationId, userId, limit = 20, firstId) {\n        try {\n            console.log(\"[Dify] 获取会话消息...\");\n            console.log(\"[Dify] 对话ID:\", conversationId);\n            const params = {\n                conversation_id: conversationId,\n                user: userId,\n                limit\n            };\n            if (firstId) {\n                params.first_id = firstId;\n            }\n            const response = await this.client.get(\"/messages\", {\n                params,\n                headers: {\n                    \"Authorization\": `Bearer ${this.apiKey}`\n                }\n            });\n            console.log(\"[Dify] 获取到消息数量:\", response.data.data?.length);\n            return response.data;\n        } catch (error) {\n            console.error(\"[Dify] 获取消息失败:\", error);\n            throw error;\n        }\n    }\n    /**\n   * 获取用户的会话列表\n   *\n   * @param userId 用户标识\n   * @param limit 返回的会话条数，默认 20\n   * @param lastId 当前页最后一条记录的 ID（用于分页）\n   * @returns 会话列表和分页信息\n   */ async getConversations(userId, limit = 20, lastId) {\n        try {\n            console.log(\"[Dify] 获取会话列表...\");\n            console.log(\"[Dify] 用户ID:\", userId);\n            const params = {\n                user: userId,\n                limit\n            };\n            if (lastId) {\n                params.last_id = lastId;\n            }\n            const response = await this.client.get(\"/conversations\", {\n                params,\n                headers: {\n                    \"Authorization\": `Bearer ${this.apiKey}`\n                }\n            });\n            console.log(\"[Dify] 获取到会话数量:\", response.data.data?.length);\n            return response.data;\n        } catch (error) {\n            console.error(\"[Dify] 获取会话列表失败:\", error);\n            throw error;\n        }\n    }\n    /**\n   * 删除会话\n   *\n   * @param conversationId 会话 ID\n   * @param userId 用户标识\n   */ async deleteConversation(conversationId, userId) {\n        try {\n            console.log(\"[Dify] 删除会话...\");\n            console.log(\"[Dify] 对话ID:\", conversationId);\n            const response = await this.client.delete(`/conversations/${conversationId}`, {\n                data: {\n                    user: userId\n                },\n                headers: {\n                    \"Authorization\": `Bearer ${this.apiKey}`\n                }\n            });\n            console.log(\"[Dify] 会话已删除\");\n            return response.data;\n        } catch (error) {\n            console.error(\"[Dify] 删除会话失败:\", error);\n            throw error;\n        }\n    }\n    /**\n   * 重命名会话\n   *\n   * @param conversationId 会话 ID\n   * @param name 新的会话名称（可选）\n   * @param userId 用户标识\n   * @param autoGenerate 是否自动生成标题，默认 false\n   */ async renameConversation(conversationId, userId, name, autoGenerate = false) {\n        try {\n            console.log(\"[Dify] 重命名会话...\");\n            console.log(\"[Dify] 对话ID:\", conversationId);\n            const response = await this.client.post(`/conversations/${conversationId}/name`, {\n                user: userId,\n                name,\n                auto_generate: autoGenerate\n            }, {\n                headers: {\n                    \"Authorization\": `Bearer ${this.apiKey}`\n                }\n            });\n            console.log(\"[Dify] 会话已重命名\");\n            return response.data;\n        } catch (error) {\n            console.error(\"[Dify] 重命名会话失败:\", error);\n            throw error;\n        }\n    }\n    /**\n   * 获取应用基本信息\n   */ async getAppInfo() {\n        try {\n            console.log(\"[Dify] 获取应用信息...\");\n            const response = await this.client.get(\"/info\", {\n                headers: {\n                    \"Authorization\": `Bearer ${this.apiKey}`\n                }\n            });\n            console.log(\"[Dify] 应用信息获取成功:\", response.data.name);\n            return response.data;\n        } catch (error) {\n            console.error(\"[Dify] 获取应用信息失败:\", error);\n            throw error;\n        }\n    }\n    /**\n   * 获取应用参数配置\n   * 包括开场白、建议问题、文件上传配置等\n   */ async getParameters() {\n        try {\n            console.log(\"[Dify] 获取应用参数...\");\n            const response = await this.client.get(\"/parameters\", {\n                headers: {\n                    \"Authorization\": `Bearer ${this.apiKey}`\n                }\n            });\n            console.log(\"[Dify] 应用参数获取成功\");\n            return response.data;\n        } catch (error) {\n            console.error(\"[Dify] 获取应用参数失败:\", error);\n            throw error;\n        }\n    }\n}\n/**\n * 创建 Dify 客户端实例\n *\n * @param apiKey Dify API Key\n * @returns DifyClient 实例\n */ function createDifyClient(apiKey) {\n    return new DifyClient({\n        apiKey,\n        baseUrl: process.env.DIFY_API_BASE_URL || \"https://api.dify.ai/v1\"\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/dify.ts\n");

/***/ }),

/***/ "(rsc)/./lib/mongodb.ts":
/*!************************!*\
  !*** ./lib/mongodb.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cleanupExpiredSubscriptions: () => (/* binding */ cleanupExpiredSubscriptions),\n/* harmony export */   closeDB: () => (/* binding */ closeDB),\n/* harmony export */   connectDB: () => (/* binding */ connectDB),\n/* harmony export */   getDB: () => (/* binding */ getDB),\n/* harmony export */   initializeDatabase: () => (/* binding */ initializeDatabase)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n/**\n * MongoDB 连接管理模块\n * 使用单例模式缓存连接，避免每次重复连接\n */ \nconst MONGODB_URI = process.env.MONGODB_URI || \"mongodb://localhost:27017\";\nconst MONGODB_DB_NAME = process.env.MONGODB_DB_NAME || \"game-ai\";\n/**\n * 缓存的连接实例\n */ let cachedClient = null;\nlet cachedDb = null;\n/**\n * 连接到 MongoDB\n * 使用单例模式确保只创建一个连接\n */ async function connectDB() {\n    // 如果已有连接，直接返回\n    if (cachedClient && cachedDb) {\n        console.log(\"[MongoDB] 使用缓存连接\");\n        return cachedDb;\n    }\n    try {\n        console.log(\"[MongoDB] 正在连接...\");\n        const client = new mongodb__WEBPACK_IMPORTED_MODULE_0__.MongoClient(MONGODB_URI, {\n            maxPoolSize: 10,\n            minPoolSize: 2,\n            maxIdleTimeMS: 60000\n        });\n        await client.connect();\n        console.log(\"[MongoDB] 连接成功\");\n        // 获取数据库实例\n        const db = client.db(MONGODB_DB_NAME);\n        // 缓存连接和数据库实例\n        cachedClient = client;\n        cachedDb = db;\n        return db;\n    } catch (error) {\n        console.error(\"[MongoDB] 连接失败:\", error);\n        throw error;\n    }\n}\n/**\n * 关闭 MongoDB 连接\n */ async function closeDB() {\n    if (cachedClient) {\n        await cachedClient.close();\n        cachedClient = null;\n        cachedDb = null;\n        console.log(\"[MongoDB] 连接已关闭\");\n    }\n}\n/**\n * 获取当前数据库实例\n */ function getDB() {\n    if (!cachedDb) {\n        throw new Error(\"Database not connected. Call connectDB() first.\");\n    }\n    return cachedDb;\n}\n/**\n * 创建必要的集合和索引\n */ async function initializeDatabase() {\n    try {\n        const db = await connectDB();\n        console.log(\"[MongoDB] 初始化数据库...\");\n        // 创建 subscriptions 集合\n        try {\n            await db.createCollection(\"subscriptions\");\n            console.log(\"[MongoDB] subscriptions 集合已创建\");\n        } catch (error) {\n            if (error.code === 48) {\n                // 集合已存在\n                console.log(\"[MongoDB] subscriptions 集合已存在\");\n            } else {\n                throw error;\n            }\n        }\n        // 创建 subscriptions 索引\n        await db.collection(\"subscriptions\").createIndex({\n            userAddress: 1\n        }, {\n            unique: true\n        });\n        console.log(\"[MongoDB] subscriptions.userAddress 唯一索引已创建\");\n        await db.collection(\"subscriptions\").createIndex({\n            expiresAt: 1\n        });\n        console.log(\"[MongoDB] subscriptions.expiresAt 索引已创建\");\n        await db.collection(\"subscriptions\").createIndex({\n            status: 1\n        });\n        console.log(\"[MongoDB] subscriptions.status 索引已创建\");\n        // 创建 chat_logs 集合（可选）\n        try {\n            await db.createCollection(\"chat_logs\");\n            console.log(\"[MongoDB] chat_logs 集合已创建\");\n        } catch (error) {\n            if (error.code === 48) {\n                console.log(\"[MongoDB] chat_logs 集合已存在\");\n            } else {\n                throw error;\n            }\n        }\n        // 创建 chat_logs 索引\n        await db.collection(\"chat_logs\").createIndex({\n            userAddress: 1\n        });\n        console.log(\"[MongoDB] chat_logs.userAddress 索引已创建\");\n        await db.collection(\"chat_logs\").createIndex({\n            timestamp: 1\n        });\n        console.log(\"[MongoDB] chat_logs.timestamp 索引已创建\");\n        // 创建 gameContent 集合\n        try {\n            await db.createCollection(\"gameContent\");\n            console.log(\"[MongoDB] gameContent 集合已创建\");\n        } catch (error) {\n            if (error.code === 48) {\n                console.log(\"[MongoDB] gameContent 集合已存在\");\n            } else {\n                throw error;\n            }\n        }\n        // 创建 gameContent 索引\n        await db.collection(\"gameContent\").createIndex({\n            contentId: 1\n        }, {\n            unique: true\n        });\n        console.log(\"[MongoDB] gameContent.contentId 唯一索引已创建\");\n        await db.collection(\"gameContent\").createIndex({\n            userAddress: 1\n        });\n        console.log(\"[MongoDB] gameContent.userAddress 索引已创建\");\n        await db.collection(\"gameContent\").createIndex({\n            gameTitle: 1\n        });\n        console.log(\"[MongoDB] gameContent.gameTitle 索引已创建\");\n        await db.collection(\"gameContent\").createIndex({\n            createdAt: 1\n        });\n        console.log(\"[MongoDB] gameContent.createdAt 索引已创建\");\n        // 创建 dividendWithdrawals 集合\n        try {\n            await db.createCollection(\"dividendWithdrawals\");\n            console.log(\"[MongoDB] dividendWithdrawals 集合已创建\");\n        } catch (error) {\n            if (error.code === 48) {\n                console.log(\"[MongoDB] dividendWithdrawals 集合已存在\");\n            } else {\n                throw error;\n            }\n        }\n        // 创建 dividendWithdrawals 索引\n        await db.collection(\"dividendWithdrawals\").createIndex({\n            withdrawalId: 1\n        }, {\n            unique: true\n        });\n        console.log(\"[MongoDB] dividendWithdrawals.withdrawalId 唯一索引已创建\");\n        await db.collection(\"dividendWithdrawals\").createIndex({\n            userAddress: 1\n        });\n        console.log(\"[MongoDB] dividendWithdrawals.userAddress 索引已创建\");\n        await db.collection(\"dividendWithdrawals\").createIndex({\n            transactionHash: 1\n        });\n        console.log(\"[MongoDB] dividendWithdrawals.transactionHash 索引已创建\");\n        await db.collection(\"dividendWithdrawals\").createIndex({\n            createdAt: 1\n        });\n        console.log(\"[MongoDB] dividendWithdrawals.createdAt 索引已创建\");\n        await db.collection(\"dividendWithdrawals\").createIndex({\n            status: 1\n        });\n        console.log(\"[MongoDB] dividendWithdrawals.status 索引已创建\");\n        console.log(\"[MongoDB] 数据库初始化完成\");\n    } catch (error) {\n        console.error(\"[MongoDB] 初始化失败:\", error);\n        throw error;\n    }\n}\n/**\n * 清理过期的订阅\n * 定期调用此函数删除已过期的订阅记录\n */ async function cleanupExpiredSubscriptions() {\n    try {\n        const db = await connectDB();\n        const now = Math.floor(Date.now() / 1000);\n        const result = await db.collection(\"subscriptions\").deleteMany({\n            expiresAt: {\n                $lt: now\n            },\n            status: \"inactive\"\n        });\n        console.log(`[MongoDB] 已清理 ${result.deletedCount} 条过期订阅记录`);\n        return result.deletedCount;\n    } catch (error) {\n        console.error(\"[MongoDB] 清理过期订阅失败:\", error);\n        throw error;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/mongodb.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/axios","vendor-chunks/asynckit","vendor-chunks/math-intrinsics","vendor-chunks/es-errors","vendor-chunks/call-bind-apply-helpers","vendor-chunks/debug","vendor-chunks/get-proto","vendor-chunks/mime-db","vendor-chunks/has-symbols","vendor-chunks/gopd","vendor-chunks/function-bind","vendor-chunks/form-data","vendor-chunks/follow-redirects","vendor-chunks/supports-color","vendor-chunks/proxy-from-env","vendor-chunks/ms","vendor-chunks/mime-types","vendor-chunks/hasown","vendor-chunks/has-tostringtag","vendor-chunks/has-flag","vendor-chunks/get-intrinsic","vendor-chunks/es-set-tostringtag","vendor-chunks/es-object-atoms","vendor-chunks/es-define-property","vendor-chunks/dunder-proto","vendor-chunks/delayed-stream","vendor-chunks/combined-stream"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Finference%2Fchat%2Froute&page=%2Fapi%2Finference%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Finference%2Fchat%2Froute.ts&appDir=%2FUsers%2Fdaniel%2FCode%2F10_project%2FGame%2Fserver%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdaniel%2FCode%2F10_project%2FGame%2Fserver&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();